{
  "openapi": "3.0.0",
  "info": {
    "title": "URL Shortener API",
    "description": "API for shortening URLs and managing user accounts",
    "version": "1.0.0",
    "contact": {
      "name": "Rian Marlon",
      "url": "https://github.com/RianMarlon/node-encurtador-url"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "url",
      "description": "URL shortening endpoints"
    },
    {
      "name": "user",
      "description": "User management endpoints"
    },
    {
      "name": "auth",
      "description": "Authentication endpoints"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": ["user"],
        "summary": "Create a new user",
        "description": "Creates a new user account with the provided information",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User full name"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User email address"
                  },
                  "password": {
                    "type": "string",
                    "description": "User password (must be between 8-30 chars, contain uppercase, lowercase, digits and symbols)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "User ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "User full name"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "description": "User email address"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "User creation timestamp"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          },
                          "field": {
                            "type": "string",
                            "description": "Field with error"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "errors": [
                    {
                      "message": "Name is required",
                      "field": "name"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "errors": [
                    {
                      "message": "Internal Server Error"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["auth"],
        "summary": "User login",
        "description": "Authenticates a user and returns an access token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User email address"
                  },
                  "password": {
                    "type": "string",
                    "description": "User password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "JWT access token"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          },
                          "field": {
                            "type": "string",
                            "description": "Field with error"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "errors": [
                    {
                      "message": "Invalid email or password"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "errors": [
                    {
                      "message": "Internal Server Error"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/urls": {
      "post": {
        "tags": ["url"],
        "summary": "Create a short URL",
        "description": "Creates a shortened URL from an original URL. Authentication is optional.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["originalUrl"],
                "properties": {
                  "originalUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "Original URL to shorten"
                  },
                  "urlKey": {
                    "type": "string",
                    "description": "Custom URL key (optional)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "URL shortened successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "urlKey": {
                      "type": "string",
                      "description": "Short URL key"
                    },
                    "shortUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "Complete shortened URL"
                    },
                    "originalUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "Original URL"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          },
                          "field": {
                            "type": "string",
                            "description": "Field with error"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "errors": [
                    {
                      "message": "Original URL is required",
                      "field": "originalUrl"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "errors": [
                    {
                      "message": "Internal Server Error"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["url"],
        "summary": "List user URLs",
        "description": "Lists all shortened URLs created by the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of user URLs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "urlKey": {
                            "type": "string",
                            "description": "Short URL key"
                          },
                          "shortUrl": {
                            "type": "string",
                            "format": "uri",
                            "description": "Complete shortened URL"
                          },
                          "originalUrl": {
                            "type": "string",
                            "format": "uri",
                            "description": "Original URL"
                          },
                          "clickCount": {
                            "type": "integer",
                            "description": "Number of clicks on this URL"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Creation timestamp"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last update timestamp"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "errors": [
                    {
                      "message": "Invalid token"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "errors": [
                    {
                      "message": "Internal Server Error"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/urls/{urlKey}": {
      "patch": {
        "tags": ["url"],
        "summary": "Update URL",
        "description": "Updates the original URL for a shortened URL. Only the creator can update.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "urlKey",
            "in": "path",
            "required": true,
            "description": "Short URL key to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["originalUrl"],
                "properties": {
                  "originalUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "New original URL"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "URL updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "urlKey": {
                      "type": "string",
                      "description": "Short URL key"
                    },
                    "shortUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "Complete shortened URL"
                    },
                    "originalUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "Updated original URL"
                    },
                    "clickCount": {
                      "type": "integer",
                      "description": "Number of clicks (reset to 0 after update)"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Creation timestamp"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Update timestamp"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          },
                          "field": {
                            "type": "string",
                            "description": "Field with error"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "errors": [
                    {
                      "message": "Original URL is required",
                      "field": "originalUrl"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "errors": [
                    {
                      "message": "Invalid token"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found - URL not found or does not belong to user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          },
                          "field": {
                            "type": "string",
                            "description": "Field with error"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "errors": [
                    {
                      "message": "URL not found",
                      "field": "urlKey"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "errors": [
                    {
                      "message": "Internal Server Error"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["url"],
        "summary": "Delete URL",
        "description": "Deletes a shortened URL. Only the creator can delete.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "urlKey",
            "in": "path",
            "required": true,
            "description": "Short URL key to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "URL deleted successfully"
          },
          "401": {
            "description": "Unauthorized - authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "errors": [
                    {
                      "message": "Invalid token"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found - URL not found or does not belong to user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          },
                          "field": {
                            "type": "string",
                            "description": "Field with error"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "errors": [
                    {
                      "message": "URL not found",
                      "field": "urlKey"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "errors": [
                    {
                      "message": "Internal Server Error"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/{urlKey}": {
      "get": {
        "tags": ["url"],
        "summary": "Resolve short URL",
        "description": "Resolves a shortened URL and redirects to the original URL",
        "parameters": [
          {
            "name": "urlKey",
            "in": "path",
            "required": true,
            "description": "Short URL key to resolve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to original URL"
          },
          "404": {
            "description": "Not found - URL not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          },
                          "field": {
                            "type": "string",
                            "description": "Field with error"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "errors": [
                    {
                      "message": "Url not found",
                      "field": "urlKey"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "errors": [
                    {
                      "message": "Internal Server Error"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT Authorization header using the Bearer scheme. Example: 'Authorization: Bearer {token}'"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message"
                },
                "field": {
                  "type": "string",
                  "description": "Field with error"
                }
              }
            }
          }
        }
      },
      "InternalServerError": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "example": {
          "errors": [
            {
              "message": "Internal Server Error"
            }
          ]
        }
      },
      "UnauthorizedError": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "example": {
          "errors": [
            {
              "message": "Invalid token"
            }
          ]
        }
      },
      "LoginError": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "example": {
          "errors": [
            {
              "message": "Invalid email or password"
            }
          ]
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message"
                },
                "field": {
                  "type": "string",
                  "description": "Field with error"
                }
              }
            }
          }
        },
        "example": {
          "errors": [
            {
              "message": "Original URL is required",
              "field": "originalUrl"
            }
          ]
        }
      },
      "UserValidationError": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message"
                },
                "field": {
                  "type": "string",
                  "description": "Field with error"
                }
              }
            }
          }
        },
        "example": {
          "errors": [
            {
              "message": "Name is required",
              "field": "name"
            }
          ]
        }
      }
    }
  }
}
